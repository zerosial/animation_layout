{"version":3,"sources":["App.tsx","index.tsx","theme.ts"],"names":["Wrapper","styled","div","Grid","Box","motion","Overlay","Circle","overlay","hidden","backgroundColor","visible","exit","App","useState","id","setId","clicked","setClicked","onClick","layoutId","whileHover","scale","originX","originY","AnimatePresence","variants","initial","animate","style","width","height","prev","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","theme","document","getElementById"],"mappings":"+OAIMA,EAAUC,IAAOC,IAAV,sKASPC,EAAOF,IAAOC,IAAV,6IAOJE,EAAMH,YAAOI,IAAOH,IAAdD,CAAH,qUAYHK,EAAUL,YAAOI,IAAOH,IAAdD,CAAH,0JASPM,EAASN,YAAOI,IAAOH,IAAdD,CAAH,iMAQNO,EAAU,CACdC,OAAQ,CAAEC,gBAAiB,oBAC3BC,QAAS,CAAED,gBAAiB,sBAC5BE,KAAM,CAAEF,gBAAiB,qBAoFZG,I,EAAAA,EAjFf,WACE,MAAoBC,mBAAwB,MAA5C,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAA8BF,oBAAkB,GAAhD,mBAAOG,EAAP,KAAgBC,EAAhB,KAEA,OACE,eAAClB,EAAD,WACE,eAACG,EAAD,WACE,cAACC,EAAD,CACEe,QAAS,kBAAMH,EAAM,MAErBI,SAAU,IACVC,WAAY,CACVC,MAAO,IACPC,QAAS,EACTC,QAAS,EACTd,gBAAiB,6BANd,GASP,cAACN,EAAD,CACEe,QAAS,kBAAMH,EAAM,MAErBI,SAAU,IACVC,WAAY,CACVC,MAAO,IACPC,QAAS,EACTC,QAAS,EACTd,gBAAiB,4BARrB,SAWIO,EAAyC,KAA/B,cAACV,EAAD,CAAQa,SAAS,YATxB,GAWP,cAAChB,EAAD,CACEe,QAAS,kBAAMH,EAAM,MAErBI,SAAU,IACVC,WAAY,CACVC,MAAO,IACPC,QAAS,EACTC,QAAS,EACTd,gBAAiB,4BARrB,SAWGO,EAAU,cAACV,EAAD,CAAQa,SAAS,WAAc,MATrC,GAWP,cAAChB,EAAD,CACEe,QAAS,kBAAMH,EAAM,MAErBI,SAAU,IACVC,WAAY,CACVC,MAAO,IACPC,QAAS,EACTC,QAAS,EACTd,gBAAiB,6BANd,MAUT,cAACe,EAAA,EAAD,UACGV,EACC,cAACT,EAAD,CACEoB,SAAUlB,EACVW,QAAS,kBAAMH,EAAM,OACrBW,QAAQ,SACRC,QAAQ,UACRhB,KAAK,OALP,SAOE,cAACR,EAAD,CACEgB,SAAUL,EACVc,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRrB,gBAAiB,8BAIrB,OAEN,wBAAQS,QAzEG,kBAAMD,GAAW,SAACc,GAAD,OAAWA,MAyEvC,wBC1HAC,EAAcC,YAAH,o9CAiEjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAeC,MC3EkB,GD2EjC,UACE,cAACL,EAAD,IACA,cAAC,EAAD,WAINM,SAASC,eAAe,W","file":"static/js/main.209ac365.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useState } from \"react\";\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  gap: 10px;\n`;\n\nconst Box = styled(motion.div)`\n  height: 30vh;\n  width: 20vw;\n  background-color: rgba(255, 255, 255, 1);\n  border-radius: 10px;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n  background-color: rgba(255, 255, 255, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overlay = styled(motion.div)`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Circle = styled(motion.div)`\n  background-color: white;\n  border-radius: 50px;\n  height: 100px;\n  width: 100px;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n`;\n\nconst overlay = {\n  hidden: { backgroundColor: \"rgba(0, 0, 0, 0)\" },\n  visible: { backgroundColor: \"rgba(0, 0, 0, 0.5)\" },\n  exit: { backgroundColor: \"rgba(0, 0, 0, 0)\" },\n};\n\nfunction App() {\n  const [id, setId] = useState<null | string>(null);\n  const [clicked, setClicked] = useState<boolean>(false);\n  const toggle = () => setClicked((prev) => !prev);\n  return (\n    <Wrapper>\n      <Grid>\n        <Box\n          onClick={() => setId(\"1\")}\n          key={1}\n          layoutId={\"1\"}\n          whileHover={{\n            scale: 1.1,\n            originX: 1,\n            originY: 1,\n            backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n          }}\n        ></Box>\n        <Box\n          onClick={() => setId(\"2\")}\n          key={2}\n          layoutId={\"2\"}\n          whileHover={{\n            scale: 1.1,\n            originX: 0,\n            originY: 1,\n            backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n          }}\n        >\n          {!clicked ? <Circle layoutId=\"circle\" /> : null}\n        </Box>\n        <Box\n          onClick={() => setId(\"3\")}\n          key={3}\n          layoutId={\"3\"}\n          whileHover={{\n            scale: 1.1,\n            originX: 1,\n            originY: 0,\n            backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n          }}\n        >\n          {clicked ? <Circle layoutId=\"circle\" /> : null}\n        </Box>\n        <Box\n          onClick={() => setId(\"4\")}\n          key={4}\n          layoutId={\"4\"}\n          whileHover={{\n            scale: 1.1,\n            originX: 0,\n            originY: 0,\n            backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n          }}\n        ></Box>\n      </Grid>\n      <AnimatePresence>\n        {id ? (\n          <Overlay\n            variants={overlay}\n            onClick={() => setId(null)}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n          >\n            <Box\n              layoutId={id}\n              style={{\n                width: 400,\n                height: 250,\n                backgroundColor: \"rgba(255, 255, 255, 1)\",\n              }}\n            />\n          </Overlay>\n        ) : null}\n      </AnimatePresence>\n      <button onClick={toggle}>Switch</button>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:black;\n  line-height: 1.2;\n  \n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {};\n"],"sourceRoot":""}